//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFTestWeb.CustomClientServices {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CustomClientServices.ICustomClient")]
    public interface ICustomClient {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomClient/ManagerInsetClient", ReplyAction="http://tempuri.org/ICustomClient/ManagerInsetClientResponse")]
        void ManagerInsetClient(ModelsSApplications.ModelsServices.ClientApplicationModel clientModelServices);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomClient/ManagerInsetClient", ReplyAction="http://tempuri.org/ICustomClient/ManagerInsetClientResponse")]
        System.Threading.Tasks.Task ManagerInsetClientAsync(ModelsSApplications.ModelsServices.ClientApplicationModel clientModelServices);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomClient/ManegerUpdateClient", ReplyAction="http://tempuri.org/ICustomClient/ManegerUpdateClientResponse")]
        void ManegerUpdateClient(ModelsSApplications.ModelsServices.ClientApplicationModel clientModelServices);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomClient/ManegerUpdateClient", ReplyAction="http://tempuri.org/ICustomClient/ManegerUpdateClientResponse")]
        System.Threading.Tasks.Task ManegerUpdateClientAsync(ModelsSApplications.ModelsServices.ClientApplicationModel clientModelServices);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomClient/ManagerDeleteClient", ReplyAction="http://tempuri.org/ICustomClient/ManagerDeleteClientResponse")]
        void ManagerDeleteClient(ModelsSApplications.ModelsServices.ClientApplicationModel clientModelServices);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomClient/ManagerDeleteClient", ReplyAction="http://tempuri.org/ICustomClient/ManagerDeleteClientResponse")]
        System.Threading.Tasks.Task ManagerDeleteClientAsync(ModelsSApplications.ModelsServices.ClientApplicationModel clientModelServices);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomClient/ManagerGetDataClient", ReplyAction="http://tempuri.org/ICustomClient/ManagerGetDataClientResponse")]
        ModelsSApplications.ModelsServices.ClientApplicationModel[] ManagerGetDataClient();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomClient/ManagerGetDataClient", ReplyAction="http://tempuri.org/ICustomClient/ManagerGetDataClientResponse")]
        System.Threading.Tasks.Task<ModelsSApplications.ModelsServices.ClientApplicationModel[]> ManagerGetDataClientAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICustomClientChannel : WCFTestWeb.CustomClientServices.ICustomClient, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomClientClient : System.ServiceModel.ClientBase<WCFTestWeb.CustomClientServices.ICustomClient>, WCFTestWeb.CustomClientServices.ICustomClient {
        
        public CustomClientClient() {
        }
        
        public CustomClientClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CustomClientClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomClientClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomClientClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void ManagerInsetClient(ModelsSApplications.ModelsServices.ClientApplicationModel clientModelServices) {
            base.Channel.ManagerInsetClient(clientModelServices);
        }
        
        public System.Threading.Tasks.Task ManagerInsetClientAsync(ModelsSApplications.ModelsServices.ClientApplicationModel clientModelServices) {
            return base.Channel.ManagerInsetClientAsync(clientModelServices);
        }
        
        public void ManegerUpdateClient(ModelsSApplications.ModelsServices.ClientApplicationModel clientModelServices) {
            base.Channel.ManegerUpdateClient(clientModelServices);
        }
        
        public System.Threading.Tasks.Task ManegerUpdateClientAsync(ModelsSApplications.ModelsServices.ClientApplicationModel clientModelServices) {
            return base.Channel.ManegerUpdateClientAsync(clientModelServices);
        }
        
        public void ManagerDeleteClient(ModelsSApplications.ModelsServices.ClientApplicationModel clientModelServices) {
            base.Channel.ManagerDeleteClient(clientModelServices);
        }
        
        public System.Threading.Tasks.Task ManagerDeleteClientAsync(ModelsSApplications.ModelsServices.ClientApplicationModel clientModelServices) {
            return base.Channel.ManagerDeleteClientAsync(clientModelServices);
        }
        
        public ModelsSApplications.ModelsServices.ClientApplicationModel[] ManagerGetDataClient() {
            return base.Channel.ManagerGetDataClient();
        }
        
        public System.Threading.Tasks.Task<ModelsSApplications.ModelsServices.ClientApplicationModel[]> ManagerGetDataClientAsync() {
            return base.Channel.ManagerGetDataClientAsync();
        }
    }
}
